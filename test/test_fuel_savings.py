# coding: utf-8

"""
    Residential Electrification Model API

    An API for REM, the Residential Electrification Model.         The other Rewiring America APIs and methodology for REM are [here](https://api.rewiringamerica.org/).

    The version of the OpenAPI document: 0.1.0
    Contact: datascience@rewiringamerica.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from rewiringamerica_rem.models.fuel_savings import FuelSavings

class TestFuelSavings(unittest.TestCase):
    """FuelSavings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FuelSavings:
        """Test FuelSavings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FuelSavings`
        """
        model = FuelSavings()
        if include_optional:
            return FuelSavings(
                baseline = rewiringamerica_rem.models.impact_metric.ImpactMetric(
                    energy = rewiringamerica_rem.models.metric_statistics.MetricStatistics(
                        mean = rewiringamerica_rem.models.quantity.Quantity(
                            value = 1.337, 
                            units = '', ), 
                        median = rewiringamerica_rem.models.quantity.Quantity(
                            value = 1.337, 
                            units = '', ), 
                        percentile_20 = , 
                        percentile_80 = , ), 
                    emissions = rewiringamerica_rem.models.metric_statistics.MetricStatistics(
                        mean = , 
                        median = , 
                        percentile_20 = , 
                        percentile_80 = , ), 
                    cost = , ),
                upgrade = rewiringamerica_rem.models.impact_metric.ImpactMetric(
                    energy = rewiringamerica_rem.models.metric_statistics.MetricStatistics(
                        mean = rewiringamerica_rem.models.quantity.Quantity(
                            value = 1.337, 
                            units = '', ), 
                        median = rewiringamerica_rem.models.quantity.Quantity(
                            value = 1.337, 
                            units = '', ), 
                        percentile_20 = , 
                        percentile_80 = , ), 
                    emissions = rewiringamerica_rem.models.metric_statistics.MetricStatistics(
                        mean = , 
                        median = , 
                        percentile_20 = , 
                        percentile_80 = , ), 
                    cost = , ),
                delta = rewiringamerica_rem.models.impact_metric.ImpactMetric(
                    energy = rewiringamerica_rem.models.metric_statistics.MetricStatistics(
                        mean = rewiringamerica_rem.models.quantity.Quantity(
                            value = 1.337, 
                            units = '', ), 
                        median = rewiringamerica_rem.models.quantity.Quantity(
                            value = 1.337, 
                            units = '', ), 
                        percentile_20 = , 
                        percentile_80 = , ), 
                    emissions = rewiringamerica_rem.models.metric_statistics.MetricStatistics(
                        mean = , 
                        median = , 
                        percentile_20 = , 
                        percentile_80 = , ), 
                    cost = , )
            )
        else:
            return FuelSavings(
                baseline = rewiringamerica_rem.models.impact_metric.ImpactMetric(
                    energy = rewiringamerica_rem.models.metric_statistics.MetricStatistics(
                        mean = rewiringamerica_rem.models.quantity.Quantity(
                            value = 1.337, 
                            units = '', ), 
                        median = rewiringamerica_rem.models.quantity.Quantity(
                            value = 1.337, 
                            units = '', ), 
                        percentile_20 = , 
                        percentile_80 = , ), 
                    emissions = rewiringamerica_rem.models.metric_statistics.MetricStatistics(
                        mean = , 
                        median = , 
                        percentile_20 = , 
                        percentile_80 = , ), 
                    cost = , ),
                upgrade = rewiringamerica_rem.models.impact_metric.ImpactMetric(
                    energy = rewiringamerica_rem.models.metric_statistics.MetricStatistics(
                        mean = rewiringamerica_rem.models.quantity.Quantity(
                            value = 1.337, 
                            units = '', ), 
                        median = rewiringamerica_rem.models.quantity.Quantity(
                            value = 1.337, 
                            units = '', ), 
                        percentile_20 = , 
                        percentile_80 = , ), 
                    emissions = rewiringamerica_rem.models.metric_statistics.MetricStatistics(
                        mean = , 
                        median = , 
                        percentile_20 = , 
                        percentile_80 = , ), 
                    cost = , ),
                delta = rewiringamerica_rem.models.impact_metric.ImpactMetric(
                    energy = rewiringamerica_rem.models.metric_statistics.MetricStatistics(
                        mean = rewiringamerica_rem.models.quantity.Quantity(
                            value = 1.337, 
                            units = '', ), 
                        median = rewiringamerica_rem.models.quantity.Quantity(
                            value = 1.337, 
                            units = '', ), 
                        percentile_20 = , 
                        percentile_80 = , ), 
                    emissions = rewiringamerica_rem.models.metric_statistics.MetricStatistics(
                        mean = , 
                        median = , 
                        percentile_20 = , 
                        percentile_80 = , ), 
                    cost = , ),
        )
        """

    def testFuelSavings(self):
        """Test FuelSavings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
